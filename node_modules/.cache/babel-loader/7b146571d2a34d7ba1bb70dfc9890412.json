{"ast":null,"code":"import axios from 'axios';\nvar instance = axios.create({\n  baseURL: 'http://localhost:8000/api'\n});\ninstance.interceptors.request.use(function (config) {\n  var token = localStorage.getItem('token');\n  var role = 'renter';\n  var domain = window.location.hostname.split('.');\n  if (domain.length === 1) role = 'renter';\n\n  if (domain.length === 2) {\n    if (domain[0] === 'admin') role = 'admin';\n    if (domain[0] === 'owner') role = 'owner';\n  }\n\n  if (token) {\n    config.headers.Authorization = token;\n    config.headers.role = role;\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"sources":["/home/hoangdk/Documents/LinhNgu/easy-accomod-webapp/src/utils/axios.ts"],"names":["axios","instance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","role","domain","window","location","hostname","split","length","headers","Authorization","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE;AADmB,CAAb,CAAjB;AAIAF,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACE,UAACC,MAAD,EAAY;AACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,MAAIC,IAAI,GAAG,QAAX;AACA,MAAMC,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,CAAf;AACA,MAAIJ,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyBN,IAAI,GAAG,QAAP;;AACzB,MAAIC,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACvB,QAAIL,MAAM,CAAC,CAAD,CAAN,KAAc,OAAlB,EAA2BD,IAAI,GAAG,OAAP;AAC3B,QAAIC,MAAM,CAAC,CAAD,CAAN,KAAc,OAAlB,EAA2BD,IAAI,GAAG,OAAP;AAC5B;;AACD,MAAIH,KAAJ,EAAW;AACTD,IAAAA,MAAM,CAACW,OAAP,CAAeC,aAAf,GAA+BX,KAA/B;AACAD,IAAAA,MAAM,CAACW,OAAP,CAAeP,IAAf,GAAsBA,IAAtB;AACD;;AAED,SAAOJ,MAAP;AACD,CAhBH,EAiBE,UAACa,KAAD;AAAA,SAAWC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAX;AAAA,CAjBF;AAoBA,eAAenB,QAAf","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:8000/api',\n})\n\ninstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token')\n    let role = 'renter'\n    const domain = window.location.hostname.split('.')\n    if (domain.length === 1) role = 'renter'\n    if (domain.length === 2) {\n      if (domain[0] === 'admin') role = 'admin'\n      if (domain[0] === 'owner') role = 'owner'\n    }\n    if (token) {\n      config.headers.Authorization = token\n      config.headers.role = role\n    }\n\n    return config\n  },\n  (error) => Promise.reject(error)\n)\n\nexport default instance\n"]},"metadata":{},"sourceType":"module"}