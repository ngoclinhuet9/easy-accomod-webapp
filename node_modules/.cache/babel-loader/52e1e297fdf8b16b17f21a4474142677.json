{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { reducers } from './reducers';\nimport sagas from './sagas'; // eslint-disable-next-line no-undef\n\nvar isDebuggingInChrome = !!window.navigator.userAgent;\nvar logger = createLogger({\n  predicate: function predicate() {\n    return isDebuggingInChrome;\n  },\n  collapsed: true,\n  duration: true\n});\nvar sagaMiddleware = createSagaMiddleware();\nvar middleware = [logger, sagaMiddleware];\nvar persistConfig = {\n  key: 'root',\n  storage: storage,\n  whitelist: ['token']\n};\nvar persistedReducers = persistReducer(persistConfig, reducers);\nvar store = configureStore({\n  reducer: persistedReducers,\n  middleware: middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n  enhancers: []\n});\nsagaMiddleware.run(sagas);\nvar persistor = persistStore(store);\nexport { persistor, store };","map":{"version":3,"sources":["/Users/tran.duc.minh/Desktop/personal/easy-accomod-webapp/src/store/configureStore.ts"],"names":["configureStore","createLogger","createSagaMiddleware","persistStore","persistReducer","storage","reducers","sagas","isDebuggingInChrome","window","navigator","userAgent","logger","predicate","collapsed","duration","sagaMiddleware","middleware","persistConfig","key","whitelist","persistedReducers","store","reducer","devTools","process","env","NODE_ENV","enhancers","run","persistor"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AACA,IAAMC,mBAAmB,GAAG,CAAC,CAACC,MAAM,CAACC,SAAP,CAAiBC,SAA/C;AACA,IAAMC,MAAM,GAAGX,YAAY,CAAC;AAC1BY,EAAAA,SAAS,EAAE;AAAA,WAAML,mBAAN;AAAA,GADe;AAE1BM,EAAAA,SAAS,EAAE,IAFe;AAG1BC,EAAAA,QAAQ,EAAE;AAHgB,CAAD,CAA3B;AAMA,IAAMC,cAAc,GAAGd,oBAAoB,EAA3C;AACA,IAAMe,UAAU,GAAG,CAACL,MAAD,EAASI,cAAT,CAAnB;AAEA,IAAME,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBd,EAAAA,OAAO,EAAPA,OAFoB;AAGpBe,EAAAA,SAAS,EAAE,CAAC,OAAD;AAHS,CAAtB;AAMA,IAAMC,iBAAiB,GAAGjB,cAAc,CAACc,aAAD,EAAgBZ,QAAhB,CAAxC;AAEA,IAAMgB,KAAK,GAAGtB,cAAc,CAAC;AAC3BuB,EAAAA,OAAO,EAAEF,iBADkB;AAE3BJ,EAAAA,UAAU,EAAVA,UAF2B;AAG3BO,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAHR;AAI3BC,EAAAA,SAAS,EAAE;AAJgB,CAAD,CAA5B;AAOAZ,cAAc,CAACa,GAAf,CAAmBtB,KAAnB;AACA,IAAMuB,SAAS,GAAG3B,YAAY,CAACmB,KAAD,CAA9B;AAGA,SAASQ,SAAT,EAAoBR,KAApB","sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport { createLogger } from 'redux-logger'\nimport createSagaMiddleware from 'redux-saga'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { reducers } from './reducers'\nimport sagas from './sagas'\n\n// eslint-disable-next-line no-undef\nconst isDebuggingInChrome = !!window.navigator.userAgent\nconst logger = createLogger({\n  predicate: () => isDebuggingInChrome,\n  collapsed: true,\n  duration: true,\n})\n\nconst sagaMiddleware = createSagaMiddleware()\nconst middleware = [logger, sagaMiddleware]\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['token'],\n}\n\nconst persistedReducers = persistReducer(persistConfig, reducers)\n\nconst store = configureStore({\n  reducer: persistedReducers,\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n  enhancers: [],\n})\n\nsagaMiddleware.run(sagas)\nconst persistor = persistStore(store)\n\nexport type AppDispatch = typeof store.dispatch\nexport { persistor, store }\n"]},"metadata":{},"sourceType":"module"}